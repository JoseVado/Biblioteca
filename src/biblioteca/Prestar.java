/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioteca;

import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author Antonio
 */
public class Prestar extends javax.swing.JPanel {

    final String usuario = "Ingrese el folio del usuario";
    final String libro = "Ingrese el ID del Libro a devolver";
    final int COLUMNA_LIBROS_DISPONIBLES = 6;
    final int COLUMNA_ID_LIBRO = 2;
    
    /**
     * Creates new form Principal
     */
    public Prestar() {
        initComponents();
        
        folio.setText(usuario);
        book_id.setText(libro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        Text1 = new javax.swing.JLabel();
        Text2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        book_id = new javax.swing.JTextField();
        folio = new javax.swing.JTextField();
        button = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Image = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("Nuevo Préstamo");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        Text1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Text1.setText("ISBN Libro");
        add(Text1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, -1, -1));

        Text2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Text2.setText("Folio Cliente");
        add(Text2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator1.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 260, 10));

        jSeparator2.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator2.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 260, 10));

        jSeparator3.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 10, 350));

        book_id.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        book_id.setForeground(new java.awt.Color(102, 102, 102));
        book_id.setBorder(null);
        book_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                book_idFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                book_idFocusLost(evt);
            }
        });
        add(book_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 260, 30));

        folio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        folio.setForeground(new java.awt.Color(102, 102, 102));
        folio.setBorder(null);
        folio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                folioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                folioFocusLost(evt);
            }
        });
        add(folio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 260, 30));

        button.setBackground(new java.awt.Color(18, 90, 173));
        button.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonMousePressed(evt);
            }
        });
        button.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Prestar");
        button.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 260, 50));

        Image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Image.setMaximumSize(new java.awt.Dimension(750, 430));
        Image.setMinimumSize(new java.awt.Dimension(750, 430));
        add(Image, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseEntered
        setColor(button);
    }//GEN-LAST:event_buttonMouseEntered

    private void buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseExited
        resetColor(button);
    }//GEN-LAST:event_buttonMouseExited
    // PRESTAR
    private void buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMousePressed
        String fol = folio.getText();
        String book = book_id.getText();
        
            
        try {
        
            
            // Verificar el usuario
            if(!UserExist(fol)){
                javax.swing.JOptionPane.showMessageDialog(this, "No existe ningún usuario con ese Folio. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                folio.requestFocus();
            }
            // Verificar el libro
            else if(!BookExist(book)){
                javax.swing.JOptionPane.showMessageDialog(this, "No existe ningún libro con esa ISBN. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                book_id.requestFocus();
            }
            // No hay libros disponibles
            else if(!BookAvailable(book)){
                javax.swing.JOptionPane.showMessageDialog(this, "Ya no hay más libros con esa ISBN para prestar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                book_id.requestFocus();
            }
            // Verificar si la persona tiene ya ese libro
            else if(CheckLending(fol, book)){
                javax.swing.JOptionPane.showMessageDialog(this, "Esa persona ya cuenta con el préstamo de ese mismo Libro. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                book_id.requestFocus();
            }
            // Verificar si la persona ya tiene el máximo de libros permitidos
            else if(!CheckMaxLending(fol)){
                javax.swing.JOptionPane.showMessageDialog(this, "Esa persona ya cuenta con el máximo de prestamos permitido. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                InsertLending(fol, book);// Insertamos el prestamo a la DB.
                folio.setText(usuario);
                book_id.setText(libro);
                javax.swing.JOptionPane.showMessageDialog(this, "¡Prestamo realizado correctamente! \n", "HECHO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            }

        } catch (SQLException ex) {
            Logger.getLogger(Prestar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_buttonMousePressed

    private void folioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_folioFocusGained
        if(folio.getText().equals(usuario))
            folio.setText("");
    }//GEN-LAST:event_folioFocusGained

    private void folioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_folioFocusLost
        if(folio.getText().isEmpty())
            folio.setText(usuario);
    }//GEN-LAST:event_folioFocusLost

    private void book_idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_book_idFocusGained
        if(book_id.getText().equals(libro))
            book_id.setText("");
    }//GEN-LAST:event_book_idFocusGained

    private void book_idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_book_idFocusLost
        if(book_id.getText().isEmpty())
            book_id.setText(libro);
    }//GEN-LAST:event_book_idFocusLost

    void setColor(JPanel panel){
        panel.setBackground(new Color(21,101,192));
    }
    void resetColor(JPanel panel){
        panel.setBackground(new Color(18,90,173));
    }
    
    public boolean UserExist(String id) throws SQLException{
        return ComunicacionBD.datosBD("usuarios", "id", id).length == 1;
    }
    
    public boolean BookExist(String isbn) throws SQLException{
        return ComunicacionBD.datosBD("libros", "isbn", isbn).length == 1;
    }
    
    public boolean BookAvailable(String book) throws SQLException{
        int cantidadLibros = Integer.valueOf(ComunicacionBD.datosBD("libros", "isbn", book)[0][COLUMNA_LIBROS_DISPONIBLES]);
        return cantidadLibros > 0;
    }
    
    
    
    public boolean CheckLending(String user, String bookid) throws SQLException{
        
        for(String[] prestamo : ComunicacionBD.datosBD("prestamos", "usuario", user)){
            if( bookid.equals(prestamo[COLUMNA_ID_LIBRO]) ){
                return true;
            }
        }
        return false;
    }
    
    public boolean CheckMaxLending(String user) throws SQLException{
        return ComunicacionBD.datosBD("prestamos","usuario",user).length < 3;
    }
    
    public void InsertLending(String user, String bookid) throws SQLException{

        Date ahora = new Date();
        Date devol = sumarFechasDias(ahora, 7);//Sumamos 7 días a la fecha actual.
        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
        
        String dev = formateador.format(devol);
        String date = formateador.format(ahora);
        
        String[][]precios = ComunicacionBD.datosBD("multas");
        
        ComunicacionBD.subirBD("prestamos", new String[]{user,bookid,date,dev,"7",precios[precios.length-1][2]});
        
        RefreshBooksStock(bookid, -1);
        
    }
    
    public void RefreshBooksStock(String bookid, int cantidad)throws SQLException{
        String[][] libro = ComunicacionBD.datosBD("libros","isbn",bookid);

        int cambio = Integer.parseInt(libro[0][COLUMNA_LIBROS_DISPONIBLES]) + cantidad; 
        
        libro[0][COLUMNA_LIBROS_DISPONIBLES] = "" + cambio;
        
        String[] res = new String[libro[0].length-1];
        
        for(int i = 0; i<res.length; i++){
            res[i] = libro[0][i+1];
        }
        
        ComunicacionBD.actualizarBD("libros", res, libro[0][0]);
    }

    
    public static String getFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        return formateador.format(ahora);
    }
    
    public static java.sql.Date sumarFechasDias(java.util.Date fch, int dias) {
        Calendar cal = new GregorianCalendar();
        cal.setTimeInMillis(fch.getTime());
        cal.add(Calendar.DATE, dias);
        return new java.sql.Date(cal.getTimeInMillis());
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Image;
    private javax.swing.JLabel Text1;
    private javax.swing.JLabel Text2;
    private javax.swing.JLabel Title;
    private javax.swing.JPanel body;
    private javax.swing.JTextField book_id;
    private javax.swing.JPanel button;
    private javax.swing.JTextField folio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
